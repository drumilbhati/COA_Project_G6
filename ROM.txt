// Basic ALU Operations
0101000000000000000001000  // Load immediate 8 -> R0
0101000010000000000001010  // Load immediate 10 -> R1
1100100100000000100000000  // Add R0, R1 -> R2
0001000110001000000000000  // Sub R1, R0 -> R3
0010001000001001100000000  // AND R1, R2 -> R4

// Memory Operations
0100100000000000011110000  // Load from memory[R0] -> R0
1001000010000000011110000  // Store R1 -> memory[R0]

// Stack Operations
1101100000000000000000000  // Push R0 onto stack
1110000010000000000000000  // Pop from stack -> R1

// I/O Operations
0110000000000000011110001  // Input from port 1 -> R0
0110100010000000011111000  // Output R1 to port 0

// Control Flow
0000100000001000000000000  // Compare R0, R1
1010000000000000000001100  // Branch if equal to PC+12
0101001110000000000000001  // Load immediate 1 -> R7

// Register-Register Operations
1100101000010001100000000  // Add R2, R3 -> R4
0010101010011100000000000  // AND R3, R4 -> R5

// End Program
0000000000000000000000000  // NOP (No Operation)
0101000000000000010001000
0100100010000000000000000
0101000100000000001000100
0000100010010000000000000
0001000010010000000000000
0101000110000000000000010
1100101000010001100000000
1001000000100000000000000
1001100110000000000000000
1010001010000000011110001
1010100000101000011111000
0110000000101000000000001
0101101100000000000000001
1011100000011001000000000
1011001100011000000000000
0110100000000000000011100
0000000000000000000000001
0000000000000000000000001
0111000000000000000100000
0111100000000000000100000
0000000000000000000000001
0000000000000000000000001
1000000000000000000100101
1000100000000000000100101
0000000000000000000000001
0000000000000000000000001
1100000000000000000000000
1101100000000000000000100
1110000000000000000000011
0110100000000000000101101
0000000000000000000000001
0000000000000000000000001
1101100000000000010000011
1110000000000000010000010
0000000000000000000000001
0000000000000000000000001